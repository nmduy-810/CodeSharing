{"version":3,"file":"default-src_app_shared_services_apps_service_ts-src_app_shared_services_table_service_ts-node-7cf11d.js","mappings":"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AG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAY;AAC/C,mCAAmC,uDAAY;AAC/C,oCAAoC,uDAAY;AAChD,sCAAsC,uDAAY;AAClD,2BAA2B,uDAAY;AACvC,0BAA0B,uDAAY;AACtC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+DAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB,gBAAgB,iEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0CAA0C,sBAAsB;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,mEAAmB,GAAG,+DAAwB,CAAC,qDAAQ,GAAG,+DAAwB,CAAC,sDAAW,GAAG,+DAAwB,CAAC,oDAAgB,GAAG,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB;AACnX,qCAAqC,+DAAwB,GAAG,iCAAiC,8uBAA8uB,aAAa,8LAA8L,aAAa,kEAA2B,GAAG;AACrkC;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,mEAAY,EAAE;AAC1B,MAAM,gCAAgC,MAAM,iDAAM,SAAS,qDAAQ,IAAI,GAAG;AAC1E,MAAM,gCAAgC,MAAM,iDAAM,SAAS,sDAAW,IAAI,GAAG;AAC7E,MAAM,MAAM,oDAAS,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","sources":["./src/app/shared/services/apps.service.ts","./src/app/shared/services/table.service.ts","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-tag.js","./node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Chat } from '../interfaces/chat.type';\r\nimport { Files } from '../interfaces/file-manager.type';\r\nimport { Mail } from '../interfaces/mail.type';\r\nimport { ProjectList } from '../interfaces/project-list.type';\r\n\r\n@Injectable()\r\nexport class AppsService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public getChatJSON(): Observable<Chat[]> {\r\n        return this.http.get<Chat[]>(\"./assets/data/apps/chat-data.json\")\r\n    }\r\n\r\n    public getFileManagerJson(): Observable<Files[]> {\r\n        return this.http.get<Files[]>(\"./assets/data/apps/file-manager-data.json\")\r\n    }\r\n\r\n    public getMailJson(): Observable<Mail[]> {\r\n        return this.http.get<Mail[]>(\"./assets/data/apps/mail-data.json\")\r\n    }\r\n\r\n    public getProjectListJson(): Observable<ProjectList[]> {\r\n        return this.http.get<ProjectList[]>(\"./assets/data/apps/project-list-data.json\")\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class TableService {\r\n\r\n    deepCopy(object: any | any[]) {\r\n        return JSON.parse(JSON.stringify(object));\r\n    }\r\n    \r\n    /**\r\n     * sort array via single\r\n     * @param sortAttribute {key: property of the object, value: 'ascend' or 'descend'}\r\n     * @param inputData\r\n     */\r\n    sort(sortAttribute: { key: string, value: string }, inputData: any[]) {\r\n        const dataArr = this.deepCopy(inputData);\r\n        if (sortAttribute.key === '' || sortAttribute.value === null) {\r\n            return dataArr;\r\n        }\r\n\r\n        let outputDataList = dataArr.sort((a, b) => {\r\n            const isAsc = sortAttribute.value === 'ascend';\r\n            switch (sortAttribute.key) {\r\n                case sortAttribute.key:\r\n                    return this.compare(\r\n                        typeof a[sortAttribute.key] !== \"string\" ? a[sortAttribute.key] : a[sortAttribute.key].toUpperCase(),\r\n                        typeof b[sortAttribute.key] !== \"string\" ? b[sortAttribute.key] : b[sortAttribute.key].toUpperCase(),isAsc\r\n                    );\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n        return outputDataList;\r\n    }\r\n\r\n    /**\r\n     * Wild card search on all property of the object\r\n     * @param input\r\n     * @param inputData\r\n     */\r\n    search(input: any, inputData: any[]) {\r\n        const searchText = (item) => {\r\n            for (let key in item) {\r\n                if (item[key] == null) {\r\n                    continue;\r\n                }\r\n\r\n                if (typeof item[key] == 'number' && item[key] != 0) {\r\n                    let date = formatDate(item[key], 'yyyy-MM-dd HH:mm:ss', 'en');\r\n                    if (date.indexOf(input.toString()) !== -1) {\r\n                        return true;\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                if (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        };\r\n        inputData = inputData.filter(value => searchText(value));\r\n        return inputData;\r\n    }\r\n\r\n    /**\r\n     * if isAsc is true\r\n     * a > b    = 1\r\n     * a === b  = 0\r\n     * a < b    = -1\r\n     *\r\n     * if isAsc is false\r\n     * a > b    = -1\r\n     * a === b  = 0\r\n     * a < b    = 1\r\n     *\r\n     * @param a\r\n     * @param b\r\n     * @param isAsc\r\n     */\r\n    private compare(a, b, isAsc: boolean) {\r\n        // null value is - (dash)\r\n        if (!a) a = '-';\r\n        if (!b) b = '-';\r\n\r\n        if (a === b) return 0;\r\n        \r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n}\r\n\r\n// Usage\r\n\r\n\r\n// import { Component } from '@angular/core';\r\n// import { NzTableService } from 'ifast-ui-ng-framework/publish';\r\n\r\n// @Component({\r\n//     selector: 'nz-demo-table-default-filter',\r\n//     template: `\r\n//         <div class=\"ant-quick-search\">\r\n//             <input nz-input placeholder=\"Search\" id=\"searchText\" (input)=\"search()\">\r\n//         </div>\r\n//         <nz-table #instantFilterTable [nzData]=\"displayData\">\r\n//             <thead (nzSortChange)=\"sort($event)\" nzSingleSort>\r\n//                 <tr>\r\n//                     <th nzShowSort nzSortKey=\"name\">Name</th>\r\n//                     <th nzShowSort nzSortKey=\"age\">Age</th>\r\n//                     <th nzShowSort nzSortKey=\"address\">Address</th>\r\n//                     <th>Action</th>\r\n//                 </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//                 <tr *ngFor=\"let data of instantFilterTable.data \">\r\n//                     <td>{{data.name}}</td>\r\n//                     <td>{{data.age}}</td>\r\n//                     <td>{{data.address}}</td>\r\n//                     <td>\r\n//                         <a>Action 一 {{data.name}}</a>\r\n//                         <nz-divider nzType=\"vertical\"></nz-divider>\r\n//                         <a>Delete</a>\r\n//                     </td>\r\n//                 </tr>\r\n//             </tbody>\r\n//         </nz-table>\r\n//     `\r\n// })\r\n\r\n// export class NzDemoTableDefaultFilterComponent {\r\n\r\n//     displayData = []\r\n\r\n//     dataSet = [\r\n//         {\r\n//             key    : '1',\r\n//             name   : 'John Brown',\r\n//             age    : 32,\r\n//             address: 'New York No. 1 Lake Park'\r\n//         },\r\n//         {\r\n//             key    : '2',\r\n//             name   : 'Jim Green',\r\n//             age    : 42,\r\n//             address: 'London No. 1 Lake Park'\r\n//         },\r\n//         {\r\n//             key    : '3',\r\n//             name   : 'Joe Black',\r\n//             age    : 32,\r\n//             address: 'Sidney No. 1 Lake Park'\r\n//         }\r\n//     ];\r\n\r\n//     constructor(private tableService: NzTableService) {\r\n//         this.displayData = this.dataSet;\r\n//     }\r\n\r\n//     sort(sortAttribute) {\r\n//         this.displayData = this.tableService.sort(sortAttribute, this.dataSet);\r\n//     }\r\n\r\n//     search() {\r\n//         this.displayData = this.dataSet;\r\n//         this.displayData = this.tableService.search((<HTMLInputElement>document.getElementById(\"searchText\")).value, this.displayData);\r\n//     }\r\n// }","import { __decorate } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Renderer2, ElementRef, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"i\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.closeTag($event); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c0 = [\"*\"];\nclass NzTagComponent {\n    constructor(cdr, renderer, elementRef, directionality) {\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.isPresetColor = false;\n        this.nzMode = 'default';\n        this.nzChecked = false;\n        this.nzOnClose = new EventEmitter();\n        this.nzCheckedChange = new EventEmitter();\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-tag');\n    }\n    updateCheckedStatus() {\n        if (this.nzMode === 'checkable') {\n            this.nzChecked = !this.nzChecked;\n            this.nzCheckedChange.emit(this.nzChecked);\n        }\n    }\n    closeTag(e) {\n        this.nzOnClose.emit(e);\n        if (!e.defaultPrevented) {\n            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n        }\n    }\n    /**\n     * @deprecated\n     * move to host after View Engine deprecation\n     * host: {\n     *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n     * }\n     */\n    clearPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        // /(ant-tag-(?:pink|red|...))/g\n        const regexp = new RegExp(`(ant-tag-(?:${[...presetColors, ...statusColors].join('|')}))`, 'g');\n        const classname = hostElement.classList.toString();\n        const matches = [];\n        let match = regexp.exec(classname);\n        while (match !== null) {\n            matches.push(match[1]);\n            match = regexp.exec(classname);\n        }\n        hostElement.classList.remove(...matches);\n    }\n    /**\n     * @deprecated\n     * move to host after View Engine deprecation\n     * host: {\n     *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n     * }\n     */\n    setPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        this.clearPresetColor();\n        if (!this.nzColor) {\n            this.isPresetColor = false;\n        }\n        else {\n            this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n        }\n        if (this.isPresetColor) {\n            hostElement.classList.add(`ant-tag-${this.nzColor}`);\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.setPresetColor();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTagComponent.ɵfac = function NzTagComponent_Factory(t) { return new (t || NzTagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nNzTagComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzTagComponent, selectors: [[\"nz-tag\"]], hostVars: 10, hostBindings: function NzTagComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() { return ctx.updateCheckedStatus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n        ɵngcc0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzMode: \"nzMode\", nzChecked: \"nzChecked\", nzColor: \"nzColor\" }, outputs: { nzOnClose: \"nzOnClose\", nzCheckedChange: \"nzCheckedChange\" }, exportAs: [\"nzTag\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]], template: function NzTagComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n    } }, directives: [ɵngcc2.NgIf, ɵngcc3.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzTagComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzTagComponent.propDecorators = {\n    nzMode: [{ type: Input }],\n    nzColor: [{ type: Input }],\n    nzChecked: [{ type: Input }],\n    nzOnClose: [{ type: Output }],\n    nzCheckedChange: [{ type: Output }]\n};\n__decorate([\n    InputBoolean()\n], NzTagComponent.prototype, \"nzChecked\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTagComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tag',\n                exportAs: 'nzTag',\n                preserveWhitespaces: false,\n                template: `\n    <ng-content></ng-content>\n    <i\n      nz-icon\n      nzType=\"close\"\n      class=\"ant-tag-close-icon\"\n      *ngIf=\"nzMode === 'closeable'\"\n      tabindex=\"-1\"\n      (click)=\"closeTag($event)\"\n    ></i>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[style.background-color]': `isPresetColor ? '' : nzColor`,\n                    '[class.ant-tag-has-color]': `nzColor && !isPresetColor`,\n                    '[class.ant-tag-checkable]': `nzMode === 'checkable'`,\n                    '[class.ant-tag-checkable-checked]': `nzChecked`,\n                    '[class.ant-tag-rtl]': `dir === 'rtl'`,\n                    '(click)': 'updateCheckedStatus()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzMode: [{\n            type: Input\n        }], nzChecked: [{\n            type: Input\n        }], nzOnClose: [{\n            type: Output\n        }], nzCheckedChange: [{\n            type: Output\n        }], nzColor: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTagModule {\n}\nNzTagModule.ɵfac = function NzTagModule_Factory(t) { return new (t || NzTagModule)(); };\nNzTagModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzTagModule });\nNzTagModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTagModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n                declarations: [NzTagComponent],\n                exports: [NzTagComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTagModule, { declarations: function () { return [NzTagComponent]; }, imports: function () { return [BidiModule, CommonModule, FormsModule, NzIconModule]; }, exports: function () { return [NzTagComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTagComponent, NzTagModule };\n\n","import { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, EventEmitter, SecurityContext, Directive, ElementRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config');\n\nclass QuillService {\n    constructor(config) {\n        this.config = config;\n        this.count = 0;\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const quillImport = yield import('quill');\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = function QuillService_Factory(t) { return new (t || QuillService)(ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN)); };\nQuillService.ɵprov = ɵɵdefineInjectable({ factory: function QuillService_Factory() { return new QuillService(ɵɵinject(QUILL_CONFIG_TOKEN)); }, token: QuillService, providedIn: \"root\" });\nQuillService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [QUILL_CONFIG_TOKEN,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [QUILL_CONFIG_TOKEN]\n            }] }]; }, null); })();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.domSanitizer = domSanitizer;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.debounceTimers = [];\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = null;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                });\n            }\n            else {\n                this.onEditorChanged.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                var _a, _b, _c;\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n                    const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n                    if (input === null || input === void 0 ? void 0 : input.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            // triggered if selection or text changed\n            this.editorChangeHandlerRef = this.debounce(this.editorChangeHandler);\n            this.quillEditor.on('editor-change', this.editorChangeHandlerRef);\n            // mark model as touched if editor lost focus\n            this.quillEditor.on('selection-change', this.selectionChangeHandler);\n            // update model if text changes\n            this.textChangeHandlerRef = this.debounce(this.textChangeHandler);\n            this.quillEditor.on('text-change', this.textChangeHandlerRef);\n            // trigger created in a timeout to avoid changed models after checked\n            // if you are using the editor api in created output to change the editor content\n            setTimeout(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.quillEditor) {\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\n            this.quillEditor.off('text-change', this.textChangeHandlerRef);\n            this.quillEditor.off('editor-change', this.editorChangeHandlerRef);\n            this.debounceTimers.forEach((timer) => this.clearDebounceTimer(timer));\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    debounce(callback) {\n        let timer;\n        return (...args) => {\n            if (typeof this.debounceTime !== 'number') {\n                callback(...args);\n                return;\n            }\n            this.clearDebounceTimer(timer);\n            timer = this.doc.defaultView.setTimeout(() => {\n                this.clearDebounceTimer(timer);\n                callback(...args);\n            }, this.debounceTime);\n            this.debounceTimers.push(timer);\n        };\n    }\n    clearDebounceTimer(timer) {\n        this.doc.defaultView.clearTimeout(timer);\n        this.debounceTimers = this.debounceTimers.filter((debounceTimer) => debounceTimer !== timer);\n    }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) { return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: QuillEditorBase, inputs: { required: \"required\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", customOptions: \"customOptions\", customModules: \"customModules\", preserveWhitespace: \"preserveWhitespace\", trimOnValidation: \"trimOnValidation\", compareValues: \"compareValues\", filterNull: \"filterNull\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", formats: \"formats\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", trackChanges: \"trackChanges\", classes: \"classes\", linkPlaceholder: \"linkPlaceholder\", debounceTime: \"debounceTime\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nQuillEditorBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService }\n];\nQuillEditorBase.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maxLength: [{ type: Input }],\n    minLength: [{ type: Input }],\n    required: [{ type: Input }],\n    formats: [{ type: Input }],\n    customToolbarPosition: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    styles: [{ type: Input }],\n    strict: [{ type: Input }],\n    scrollingContainer: [{ type: Input }],\n    bounds: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    customModules: [{ type: Input }],\n    trackChanges: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    classes: [{ type: Input }],\n    trimOnValidation: [{ type: Input }],\n    linkPlaceholder: [{ type: Input }],\n    compareValues: [{ type: Input }],\n    filterNull: [{ type: Input }],\n    debounceTime: [{ type: Input }],\n    onEditorCreated: [{ type: Output }],\n    onEditorChanged: [{ type: Output }],\n    onContentChanged: [{ type: Output }],\n    onSelectionChanged: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    valueGetter: [{ type: Input }],\n    valueSetter: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }]; }, { required: [{\n            type: Input\n        }], customToolbarPosition: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], trimOnValidation: [{\n            type: Input\n        }], compareValues: [{\n            type: Input\n        }], filterNull: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], onEditorChanged: [{\n            type: Output\n        }], onContentChanged: [{\n            type: Output\n        }], onSelectionChanged: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], valueGetter: [{\n            type: Input\n        }], valueSetter: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], maxLength: [{\n            type: Input\n        }], minLength: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], scrollingContainer: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], trackChanges: [{\n            type: Input\n        }], classes: [{\n            type: Input\n        }], linkPlaceholder: [{\n            type: Input\n        }], debounceTime: [{\n            type: Input\n        }] }); })();\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        super(elementRef, domSanitizer, doc, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) { return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillEditorComponent, selectors: [[\"quill-editor\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function QuillEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\nQuillEditorComponent.ctorParameters = () => [\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    },\n                    {\n                        multi: true,\n                        provide: NG_VALIDATORS,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    }\n                ],\n                selector: 'quill-editor',\n                template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, null); })();\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.sanitize = false;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) { return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewHTMLComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewHTMLComponent, selectors: [[\"quill-view-html\"]], inputs: { content: \"content\", sanitize: \"sanitize\", theme: \"theme\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]], template: function QuillViewHTMLComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewHTMLComponent.ctorParameters = () => [\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: QuillService }\n];\nQuillViewHTMLComponent.propDecorators = {\n    content: [{ type: Input }],\n    theme: [{ type: Input }],\n    sanitize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view-html',\n                template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n                styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: QuillService }]; }, { content: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // trigger created in a timeout to avoid changed models after checked\n            setTimeout(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) { return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nQuillViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuillViewComponent, selectors: [[\"quill-view\"]], inputs: { sanitize: \"sanitize\", strict: \"strict\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", content: \"content\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QuillViewComponent_Template(rf, ctx) { }, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nQuillViewComponent.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    formats: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    strict: [{ type: Input }],\n    content: [{ type: Input }],\n    customModules: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    onEditorCreated: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view',\n                template: `\n`,\n                styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { sanitize: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = function QuillModule_Factory(t) { return new (t || QuillModule)(); };\nQuillModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });\nQuillModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [QuillService], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    QuillEditorComponent,\n                    QuillViewComponent,\n                    QuillViewHTMLComponent\n                ],\n                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                imports: [CommonModule],\n                providers: [QuillService]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; } }); })();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n\n"],"names":[],"sourceRoot":"webpack:///"}
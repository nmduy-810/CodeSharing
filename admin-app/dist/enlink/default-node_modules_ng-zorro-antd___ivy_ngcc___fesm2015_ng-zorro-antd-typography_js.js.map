{"version":3,"file":"default-node_modules_ng-zorro-antd___ivy_ngcc___fesm2015_ng-zorro-antd-typography_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAsC;AACK;AACP;AACmG;;AAEvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B,sDAAe,CAAC,qDAAQ;AACrG,kBAAkB,gEAAqB,GAAG,wCAAwC,qBAAqB,sDAAW,CAAC,qDAAW,KAAK,wCAAwC;AAC3K;AACA,MAAM,gCAAgC,MAAM,iDAAM,SAAS,qDAAQ,IAAI;AACvE;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,iBAAiB,oBAAoB;AACrC,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,iDAAM;AAC5B,uBAAuB,qDAAQ;AAC/B,aAAa,GAAG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yDAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAY;AAC/C,0BAA0B,uDAAY;AACtC,kCAAkC,uDAAY;AAC9C,sDAAsD;AACtD,gCAAgC,uDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC,wCAAwC,qDAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA,mBAAmB,wEAAc;AACjC;AACA;AACA,mBAAmB,wEAAc;AACjC;AACA;AACA;AACA,QAAQ,yFAA2B;AACnC;AACA;AACA;AACA,qBAAqB,0EAAY;AACjC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B,EAAE,iEAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA,oCAAoC,yDAAS;AAC7C;AACA;AACA,SAAS;AACT,uFAAuF,yDAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wFAAwF;AACxG;AACA;AACA;AACA;AACA;AAC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","sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/clipboard.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-trans-button.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-typography.js"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, NgZone, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = this._textarea = this._document.createElement('textarea');\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try { // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            if (textarea.parentNode) {\n                textarea.parentNode.removeChild(textarea);\n            }\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = function Clipboard_Factory(t) { return new (t || Clipboard)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nClipboard.ɵprov = i0.ɵɵdefineInjectable({ factory: function Clipboard_Factory() { return new Clipboard(i0.ɵɵinject(i1.DOCUMENT)); }, token: Clipboard, providedIn: \"root\" });\nClipboard.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Clipboard, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * @deprecated Use `CDK_COPY_TO_CLIPBOARD_CONFIG` instead.\n * @breaking-change 13.0.0\n */\nconst CKD_COPY_TO_CLIPBOARD_CONFIG = CDK_COPY_TO_CLIPBOARD_CONFIG;\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = function CdkCopyToClipboard_Factory(t) { return new (t || CdkCopyToClipboard)(ɵngcc0.ɵɵdirectiveInject(Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(CKD_COPY_TO_CLIPBOARD_CONFIG, 8)); };\nCdkCopyToClipboard.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCopyToClipboard, selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]], hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() { return ctx.copy(); });\n    } }, inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" } });\nCdkCopyToClipboard.ctorParameters = () => [\n    { type: Clipboard },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CKD_COPY_TO_CLIPBOARD_CONFIG,] }] }\n];\nCdkCopyToClipboard.propDecorators = {\n    text: [{ type: Input, args: ['cdkCopyToClipboard',] }],\n    attempts: [{ type: Input, args: ['cdkCopyToClipboardAttempts',] }],\n    copied: [{ type: Output, args: ['cdkCopyToClipboardCopied',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkCopyToClipboard]',\n                host: {\n                    '(click)': 'copy()'\n                }\n            }]\n    }], function () { return [{ type: Clipboard }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CKD_COPY_TO_CLIPBOARD_CONFIG]\n            }] }]; }, { text: [{\n            type: Input,\n            args: ['cdkCopyToClipboard']\n        }], attempts: [{\n            type: Input,\n            args: ['cdkCopyToClipboardAttempts']\n        }], copied: [{\n            type: Output,\n            args: ['cdkCopyToClipboardCopied']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); };\nClipboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkCopyToClipboard],\n                exports: [CdkCopyToClipboard]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CKD_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n\n","import { CommonModule } from '@angular/common';\nimport { Directive, NgModule } from '@angular/core';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzTransButtonDirective {\n}\nNzTransButtonDirective.ɵfac = function NzTransButtonDirective_Factory(t) { return new (t || NzTransButtonDirective)(); };\nNzTransButtonDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NzTransButtonDirective, selectors: [[\"button\", \"nz-trans-button\", \"\"]], hostVars: 8, hostBindings: function NzTransButtonDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"border\", \"0\")(\"background\", \"transparent\")(\"padding\", \"0\")(\"line-height\", \"inherit\");\n    } } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTransButtonDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'button[nz-trans-button]',\n                host: {\n                    '[style.border]': '\"0\"',\n                    '[style.background]': '\"transparent\"',\n                    '[style.padding]': '\"0\"',\n                    '[style.line-height]': '\"inherit\"'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonModule {\n}\nNzTransButtonModule.ɵfac = function NzTransButtonModule_Factory(t) { return new (t || NzTransButtonModule)(); };\nNzTransButtonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzTransButtonModule });\nNzTransButtonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTransButtonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NzTransButtonDirective],\n                exports: [NzTransButtonDirective],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTransButtonModule, { declarations: function () { return [NzTransButtonDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzTransButtonDirective]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTransButtonDirective, NzTransButtonModule };\n\n","import { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Clipboard, ClipboardModule } from '@angular/cdk/clipboard';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, Output, NgZone, ViewChild, ViewContainerRef, Renderer2, Inject, Optional, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/clipboard';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/trans-button';\nimport * as ɵngcc4 from 'ng-zorro-antd/tooltip';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from 'ng-zorro-antd/input';\nimport * as ɵngcc9 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc10 from '@angular/cdk/platform';\nimport * as ɵngcc11 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc12 from '@angular/cdk/bidi';\n\nfunction NzTextCopyComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", icon_r1);\n} }\nconst _c0 = [\"textarea\"];\nfunction NzTextEditComponent_button_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const icon_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", icon_r3);\n} }\nfunction NzTextEditComponent_button_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onClick(); });\n    ɵngcc0.ɵɵtemplate(1, NzTextEditComponent_button_0_ng_container_1_Template, 2, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx_r0.tooltip === null ? null : ctx_r0.tooltip || (ctx_r0.locale == null ? null : ctx_r0.locale.edit));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.icon);\n} }\nfunction NzTextEditComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"textarea\", 5, 6);\n    ɵngcc0.ɵɵlistener(\"input\", function NzTextEditComponent_ng_container_1_Template_textarea_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onInput($event); })(\"blur\", function NzTextEditComponent_ng_container_1_Template_textarea_blur_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.confirm(); })(\"keydown.esc\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_esc_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onCancel(); })(\"keydown.enter\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_enter_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onEnter($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_container_1_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.confirm(); });\n    ɵngcc0.ɵɵelement(4, \"i\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nconst _c1 = [\"ellipsisContainer\"];\nconst _c2 = [\"expandable\"];\nconst _c3 = [\"contentTemplate\"];\nfunction NzTypographyComponent_ng_template_0_ng_content_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"!content\"]);\n} }\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_ng_content_0_Template, 1, 0, \"ng-content\", 1);\n    ɵngcc0.ɵɵtext(1);\n} if (rf & 2) {\n    const content_r5 = ctx.content;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !content_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", content_r5, \" \");\n} }\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template(rf, ctx) { }\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.nzSuffix);\n} }\nconst _c4 = function (a0) { return { content: a0 }; };\nfunction NzTypographyComponent_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c4, ctx_r7.nzContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.nzSuffix);\n} }\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13.ellipsisStr);\n} }\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.nzSuffix);\n} }\nfunction NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(3); return ctx_r17.onExpand(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r15.locale == null ? null : ctx_r15.locale.expand, \" \");\n} }\nfunction NzTypographyComponent_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", null, 7);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template, 3, 1, \"a\", 8);\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.isEllipsis);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzSuffix);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzExpandable && ctx_r9.isEllipsis);\n} }\nfunction NzTypographyComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_Template, 5, 3, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r8 = ɵngcc0.ɵɵreference(3);\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.expanded || !ctx_r2.hasOperationsWithEllipsis && ctx_r2.nzEllipsisRows === 1 && !ctx_r2.hasEllipsisObservers || ctx_r2.canCssEllipsis || ctx_r2.nzSuffix && ctx_r2.expanded)(\"ngIfElse\", _r8);\n} }\nfunction NzTypographyComponent_nz_text_edit_3_Template(rf, ctx) { if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-edit\", 11);\n    ɵngcc0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.onEndEditing($event); })(\"startEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.onStartEditing(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r3.nzContent)(\"icon\", ctx_r3.nzEditIcon)(\"tooltip\", ctx_r3.nzEditTooltip);\n} }\nfunction NzTypographyComponent_nz_text_copy_4_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-copy\", 12);\n    ɵngcc0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.onTextCopy($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r4.copyText)(\"tooltips\", ctx_r4.nzCopyTooltips)(\"icons\", ctx_r4.nzCopyIcons);\n} }\nconst _c5 = [\"*\"];\nclass NzTextCopyComponent {\n    constructor(host, cdr, clipboard, i18n) {\n        this.host = host;\n        this.cdr = cdr;\n        this.clipboard = clipboard;\n        this.i18n = i18n;\n        this.copied = false;\n        this.copyId = -1;\n        this.nativeElement = this.host.nativeElement;\n        this.copyTooltip = null;\n        this.copedTooltip = null;\n        this.copyIcon = 'copy';\n        this.copedIcon = 'check';\n        this.destroy$ = new Subject();\n        this.icons = ['copy', 'check'];\n        this.textCopy = new EventEmitter();\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.updateTooltips();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tooltips, icons } = changes;\n        if (tooltips) {\n            this.updateTooltips();\n        }\n        if (icons) {\n            this.updateIcons();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        if (this.copied) {\n            return;\n        }\n        this.copied = true;\n        this.cdr.detectChanges();\n        const text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n    }\n    onCopied() {\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(() => {\n            this.copied = false;\n            this.cdr.detectChanges();\n        }, 3000);\n    }\n    updateTooltips() {\n        var _a, _b, _c, _d;\n        if (this.tooltips === null) {\n            this.copedTooltip = null;\n            this.copyTooltip = null;\n        }\n        else if (Array.isArray(this.tooltips)) {\n            const [copyTooltip, copedTooltip] = this.tooltips;\n            this.copyTooltip = copyTooltip || ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.copy);\n            this.copedTooltip = copedTooltip || ((_b = this.locale) === null || _b === void 0 ? void 0 : _b.copied);\n        }\n        else {\n            this.copyTooltip = (_c = this.locale) === null || _c === void 0 ? void 0 : _c.copy;\n            this.copedTooltip = (_d = this.locale) === null || _d === void 0 ? void 0 : _d.copied;\n        }\n        this.cdr.markForCheck();\n    }\n    updateIcons() {\n        const [copyIcon, copedIcon] = this.icons;\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n    }\n}\nNzTextCopyComponent.ɵfac = function NzTextCopyComponent_Factory(t) { return new (t || NzTextCopyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService)); };\nNzTextCopyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzTextCopyComponent, selectors: [[\"nz-text-copy\"]], inputs: { icons: \"icons\", text: \"text\", tooltips: \"tooltips\" }, outputs: { textCopy: \"textCopy\" }, exportAs: [\"nzTextCopy\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 4, consts: [[\"type\", \"button\", \"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]], template: function NzTextCopyComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() { return ctx.onClick(); });\n        ɵngcc0.ɵɵtemplate(1, NzTextCopyComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n        ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.copedTooltip : ctx.copyTooltip);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.copied ? ctx.copedIcon : ctx.copyIcon);\n    } }, directives: [ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzTextCopyComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Clipboard },\n    { type: NzI18nService }\n];\nNzTextCopyComponent.propDecorators = {\n    text: [{ type: Input }],\n    tooltips: [{ type: Input }],\n    icons: [{ type: Input }],\n    textCopy: [{ type: Output }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n    constructor(zone, host, cdr, i18n) {\n        this.zone = zone;\n        this.host = host;\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.editing = false;\n        this.destroy$ = new Subject();\n        this.icon = 'edit';\n        this.startEditing = new EventEmitter();\n        this.endEditing = new EventEmitter(true);\n        this.nativeElement = this.host.nativeElement;\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n    }\n    confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n    }\n    onInput(event) {\n        const target = event.target;\n        this.currentText = target.value;\n    }\n    onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n    }\n    onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n    }\n    focusAndSetValue() {\n        this.zone.onStable.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n            var _a;\n            if ((_a = this.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n                this.textarea.nativeElement.focus();\n                this.textarea.nativeElement.value = this.currentText || '';\n                this.autosizeDirective.resizeToFitContent();\n                this.cdr.markForCheck();\n            }\n        });\n    }\n}\nNzTextEditComponent.ɵfac = function NzTextEditComponent_Factory(t) { return new (t || NzTextEditComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService)); };\nNzTextEditComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzTextEditComponent, selectors: [[\"nz-text-edit\"]], viewQuery: function NzTextEditComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(NzAutosizeDirective, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n    } }, inputs: { icon: \"icon\", text: \"text\", tooltip: \"tooltip\" }, outputs: { startEditing: \"startEditing\", endEditing: \"endEditing\" }, exportAs: [\"nzTextEdit\"], decls: 2, vars: 2, consts: [[\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", \"class\", \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"input\", \"blur\", \"keydown.esc\", \"keydown.enter\"], [\"textarea\", \"\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"enter\"]], template: function NzTextEditComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTextEditComponent_button_0_Template, 2, 2, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzTextEditComponent_ng_container_1_Template, 5, 0, \"ng-container\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editing);\n    } }, directives: [ɵngcc7.NgIf, ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective, ɵngcc8.NzInputDirective, ɵngcc8.NzAutosizeDirective], encapsulation: 2, changeDetection: 0 });\nNzTextEditComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NzI18nService }\n];\nNzTextEditComponent.propDecorators = {\n    text: [{ type: Input }],\n    icon: [{ type: Input }],\n    tooltip: [{ type: Input }],\n    startEditing: [{ type: Output }],\n    endEditing: [{ type: Output }],\n    textarea: [{ type: ViewChild, args: ['textarea', { static: false },] }],\n    autosizeDirective: [{ type: ViewChild, args: [NzAutosizeDirective, { static: false },] }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.cdr = cdr;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.platform = platform;\n        this.i18n = i18n;\n        this.resizeService = resizeService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzCopyable = false;\n        this.nzEditable = false;\n        this.nzDisabled = false;\n        this.nzExpandable = false;\n        this.nzEllipsis = false;\n        this.nzCopyTooltips = undefined;\n        this.nzCopyIcons = ['copy', 'check'];\n        this.nzEditTooltip = undefined;\n        this.nzEditIcon = 'edit';\n        this.nzEllipsisRows = 1;\n        this.nzContentChange = new EventEmitter();\n        this.nzCopy = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        // This is not a two-way binding output with {@link nzEllipsis}\n        this.nzOnEllipsis = new EventEmitter();\n        this.expandableBtnElementCache = null;\n        this.editing = false;\n        this.cssEllipsis = false;\n        this.isEllipsis = true;\n        this.expanded = false;\n        this.ellipsisStr = '...';\n        this.dir = 'ltr';\n        this.viewInit = false;\n        this.rfaId = -1;\n        this.destroy$ = new Subject();\n        this.windowResizeSubscription = Subscription.EMPTY;\n        this.document = document;\n    }\n    get hasEllipsisObservers() {\n        return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n        return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent);\n    }\n    onTextCopy(text) {\n        this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n        this.editing = true;\n    }\n    onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n        if (this.nzContent === text) {\n            this.renderOnNextFrame();\n        }\n        this.cdr.markForCheck();\n    }\n    onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n            return false;\n        }\n        // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n        if (this.hasEllipsisObservers) {\n            return false;\n        }\n        if (this.nzEllipsisRows === 1) {\n            return isStyleSupport('textOverflow');\n        }\n        else {\n            return isStyleSupport('webkitLineClamp');\n        }\n    }\n    renderOnNextFrame() {\n        cancelRequestAnimationFrame(this.rfaId);\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n            return;\n        }\n        this.rfaId = reqAnimFrame(() => {\n            this.syncEllipsis();\n        });\n    }\n    getOriginContentViewRef() {\n        const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n            content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n            viewRef,\n            removeView: () => {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n            }\n        };\n    }\n    syncEllipsis() {\n        if (this.cssEllipsis) {\n            return;\n        }\n        const { viewRef, removeView } = this.getOriginContentViewRef();\n        const fixedNodes = [this.textCopyRef, this.textEditRef]\n            .filter(e => e && e.nativeElement)\n            .map(e => e.nativeElement);\n        const expandableBtnElement = this.getExpandableBtnElement();\n        if (expandableBtnElement) {\n            fixedNodes.push(expandableBtnElement);\n        }\n        const { contentNodes, text, ellipsis } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n        removeView();\n        this.ellipsisText = text;\n        if (ellipsis !== this.isEllipsis) {\n            this.isEllipsis = ellipsis;\n            this.nzOnEllipsis.emit(ellipsis);\n        }\n        const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n        while (ellipsisContainerNativeElement.firstChild) {\n            this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n        contentNodes.forEach(n => {\n            this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n        if (this.nzExpandable) {\n            const expandText = this.locale ? this.locale.expand : '';\n            const cache = this.expandableBtnElementCache;\n            if (!cache || cache.innerText === expandText) {\n                const el = this.document.createElement('a');\n                el.className = EXPAND_ELEMENT_CLASSNAME;\n                el.innerText = expandText;\n                this.expandableBtnElementCache = el;\n            }\n            return this.expandableBtnElementCache;\n        }\n        else {\n            this.expandableBtnElementCache = null;\n            return null;\n        }\n    }\n    renderAndSubscribeWindowResize() {\n        if (this.platform.isBrowser) {\n            this.windowResizeSubscription.unsubscribe();\n            this.cssEllipsis = this.canUseCSSEllipsis();\n            this.renderOnNextFrame();\n            this.windowResizeSubscription = this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.renderOnNextFrame());\n        }\n    }\n    ngOnInit() {\n        var _a;\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n        const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n            if (this.nzEllipsis) {\n                if (this.expanded) {\n                    this.windowResizeSubscription.unsubscribe();\n                }\n                else {\n                    this.renderAndSubscribeWindowResize();\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n    }\n}\nNzTypographyComponent.ɵfac = function NzTypographyComponent_Factory(t) { return new (t || NzTypographyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.NzResizeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.Directionality, 8)); };\nNzTypographyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzTypographyComponent, selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]], viewQuery: function NzTypographyComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NzTextEditComponent, 5);\n        ɵngcc0.ɵɵviewQuery(NzTextCopyComponent, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    } }, hostVars: 26, hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n        ɵngcc0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-rtl\", ctx.dir === \"rtl\")(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-success\", ctx.nzType === \"success\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-single-line\", ctx.nzEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n    } }, inputs: { nzCopyable: \"nzCopyable\", nzEditable: \"nzEditable\", nzDisabled: \"nzDisabled\", nzExpandable: \"nzExpandable\", nzEllipsis: \"nzEllipsis\", nzCopyTooltips: \"nzCopyTooltips\", nzCopyIcons: \"nzCopyIcons\", nzEditTooltip: \"nzEditTooltip\", nzEditIcon: \"nzEditIcon\", nzEllipsisRows: \"nzEllipsisRows\", nzContent: \"nzContent\", nzType: \"nzType\", nzCopyText: \"nzCopyText\", nzSuffix: \"nzSuffix\" }, outputs: { nzContentChange: \"nzContentChange\", nzCopy: \"nzCopy\", nzExpandChange: \"nzExpandChange\", nzOnEllipsis: \"nzOnEllipsis\" }, exportAs: [\"nzTypography\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c5, decls: 5, vars: 3, consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\", 4, \"ngIf\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"jsEllipsis\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ellipsisContainer\", \"\"], [\"class\", \"ant-typography-expand\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-typography-expand\", 3, \"click\"], [\"expandable\", \"\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\"]], template: function NzTypographyComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_Template, 4, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_nz_text_edit_3_Template, 1, 3, \"nz-text-edit\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_nz_text_copy_4_Template, 1, 3, \"nz-text-copy\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzEditable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzCopyable && !ctx.editing);\n    } }, directives: [ɵngcc7.NgIf, ɵngcc7.NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent], encapsulation: 2, changeDetection: 0 });\nNzTypographyComponent.ctorParameters = () => [\n    { type: NzConfigService },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: Platform },\n    { type: NzI18nService },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NzResizeService },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzTypographyComponent.propDecorators = {\n    nzCopyable: [{ type: Input }],\n    nzEditable: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzExpandable: [{ type: Input }],\n    nzEllipsis: [{ type: Input }],\n    nzCopyTooltips: [{ type: Input }],\n    nzCopyIcons: [{ type: Input }],\n    nzEditTooltip: [{ type: Input }],\n    nzEditIcon: [{ type: Input }],\n    nzContent: [{ type: Input }],\n    nzEllipsisRows: [{ type: Input }],\n    nzType: [{ type: Input }],\n    nzCopyText: [{ type: Input }],\n    nzSuffix: [{ type: Input }],\n    nzContentChange: [{ type: Output }],\n    nzCopy: [{ type: Output }],\n    nzExpandChange: [{ type: Output }],\n    nzOnEllipsis: [{ type: Output }],\n    textEditRef: [{ type: ViewChild, args: [NzTextEditComponent, { static: false },] }],\n    textCopyRef: [{ type: ViewChild, args: [NzTextCopyComponent, { static: false },] }],\n    ellipsisContainer: [{ type: ViewChild, args: ['ellipsisContainer', { static: false },] }],\n    expandableBtn: [{ type: ViewChild, args: ['expandable', { static: false },] }],\n    contentTemplate: [{ type: ViewChild, args: ['contentTemplate', { static: false },] }]\n};\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTextCopyComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-text-copy',\n                exportAs: 'nzTextCopy',\n                template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.Clipboard }, { type: ɵngcc2.NzI18nService }]; }, { icons: [{\n            type: Input\n        }], textCopy: [{\n            type: Output\n        }], text: [{\n            type: Input\n        }], tooltips: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTextEditComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-text-edit',\n                exportAs: 'nzTextEdit',\n                template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.NzI18nService }]; }, { icon: [{\n            type: Input\n        }], startEditing: [{\n            type: Output\n        }], endEditing: [{\n            type: Output\n        }], text: [{\n            type: Input\n        }], tooltip: [{\n            type: Input\n        }], textarea: [{\n            type: ViewChild,\n            args: ['textarea', { static: false }]\n        }], autosizeDirective: [{\n            type: ViewChild,\n            args: [NzAutosizeDirective, { static: false }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTypographyComponent, [{\n        type: Component,\n        args: [{\n                selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n                exportAs: 'nzTypography',\n                template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                host: {\n                    '[class.ant-typography]': '!editing',\n                    '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n                    '[class.ant-typography-edit-content]': 'editing',\n                    '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n                    '[class.ant-typography-warning]': 'nzType === \"warning\"',\n                    '[class.ant-typography-danger]': 'nzType === \"danger\"',\n                    '[class.ant-typography-success]': 'nzType === \"success\"',\n                    '[class.ant-typography-disabled]': 'nzDisabled',\n                    '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n                    '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n                    '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n                    '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n                    '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc9.NzConfigService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc10.Platform }, { type: ɵngcc2.NzI18nService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc11.NzResizeService }, { type: ɵngcc12.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzCopyable: [{\n            type: Input\n        }], nzEditable: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzExpandable: [{\n            type: Input\n        }], nzEllipsis: [{\n            type: Input\n        }], nzCopyTooltips: [{\n            type: Input\n        }], nzCopyIcons: [{\n            type: Input\n        }], nzEditTooltip: [{\n            type: Input\n        }], nzEditIcon: [{\n            type: Input\n        }], nzEllipsisRows: [{\n            type: Input\n        }], nzContentChange: [{\n            type: Output\n        }], nzCopy: [{\n            type: Output\n        }], nzExpandChange: [{\n            type: Output\n        }], nzOnEllipsis: [{\n            type: Output\n        }], nzContent: [{\n            type: Input\n        }], nzType: [{\n            type: Input\n        }], nzCopyText: [{\n            type: Input\n        }], nzSuffix: [{\n            type: Input\n        }], textEditRef: [{\n            type: ViewChild,\n            args: [NzTextEditComponent, { static: false }]\n        }], textCopyRef: [{\n            type: ViewChild,\n            args: [NzTextCopyComponent, { static: false }]\n        }], ellipsisContainer: [{\n            type: ViewChild,\n            args: ['ellipsisContainer', { static: false }]\n        }], expandableBtn: [{\n            type: ViewChild,\n            args: ['expandable', { static: false }]\n        }], contentTemplate: [{\n            type: ViewChild,\n            args: ['contentTemplate', { static: false }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n}\nNzTypographyModule.ɵfac = function NzTypographyModule_Factory(t) { return new (t || NzTypographyModule)(); };\nNzTypographyModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzTypographyModule });\nNzTypographyModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            BidiModule,\n            CommonModule,\n            NzIconModule,\n            NzToolTipModule,\n            NzInputModule,\n            NzI18nModule,\n            NzTransButtonModule,\n            ClipboardModule,\n            NzOutletModule\n        ], PlatformModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTypographyModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    CommonModule,\n                    NzIconModule,\n                    NzToolTipModule,\n                    NzInputModule,\n                    NzI18nModule,\n                    NzTransButtonModule,\n                    ClipboardModule,\n                    NzOutletModule\n                ],\n                exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n                declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTypographyModule, { declarations: function () { return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]; }, imports: function () { return [BidiModule,\n        CommonModule,\n        NzIconModule,\n        NzToolTipModule,\n        NzInputModule,\n        NzI18nModule,\n        NzTransButtonModule,\n        ClipboardModule,\n        NzOutletModule]; }, exports: function () { return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n\n"],"names":[],"sourceRoot":"webpack:///"}
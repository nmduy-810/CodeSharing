{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/error-1/error-1.component.ts","./src/app/authentication/error-1/error-1.component.html","./src/app/authentication/error-2/error-2.component.ts","./src/app/authentication/error-2/error-2.component.html","./src/app/authentication/login-1/login-1.component.ts","./src/app/authentication/login-1/login-1.component.html","./src/app/authentication/login-2/login-2.component.ts","./src/app/authentication/login-2/login-2.component.html","./src/app/authentication/login-3/login-3.component.ts","./src/app/authentication/login-3/login-3.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/sign-up-1/sign-up-1.component.ts","./src/app/authentication/sign-up-1/sign-up-1.component.html","./src/app/authentication/sign-up-2/sign-up-2.component.ts","./src/app/authentication/sign-up-2/sign-up-2.component.html","./src/app/authentication/sign-up-3/sign-up-3.component.ts","./src/app/authentication/sign-up-3/sign-up-3.component.html","./node_modules/ngx-spinner/fesm2015/ngx-spinner.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Login1Component } from './login-1/login-1.component';\r\nimport { Login2Component } from './login-2/login-2.component';\r\nimport { Login3Component } from './login-3/login-3.component';\r\nimport { SignUp1Component } from './sign-up-1/sign-up-1.component';\r\nimport { SignUp2Component } from './sign-up-2/sign-up-2.component';\r\nimport { SignUp3Component } from './sign-up-3/sign-up-3.component';\r\nimport { Error1Component } from './error-1/error-1.component';\r\nimport { Error2Component } from './error-2/error-2.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {\r\n            title: 'Login'\r\n        }\r\n    },\r\n    {\r\n        path: 'login-1',\r\n        component: Login1Component,\r\n        data: {\r\n            title: 'Login 1'\r\n        }\r\n    },\r\n    {\r\n        path: 'login-2',\r\n        component: Login2Component,\r\n        data: {\r\n            title: 'Login 2'\r\n        }\r\n    },\r\n    {\r\n        path: 'login-3',\r\n        component: Login3Component,\r\n        data: {\r\n            title: 'Login 3'\r\n        }\r\n    },\r\n    {\r\n        path: 'sign-up-1',\r\n        component: SignUp1Component,\r\n        data: {\r\n            title: 'Sign Up 1'\r\n        }\r\n    },\r\n    {\r\n        path: 'sign-up-2',\r\n        component: SignUp2Component,\r\n        data: {\r\n            title: 'Sign Up 2'\r\n        }\r\n    },\r\n    {\r\n        path: 'sign-up-3',\r\n        component: SignUp3Component,\r\n        data: {\r\n            title: 'Sign Up 2'\r\n        }\r\n    },\r\n    {\r\n        path: 'error-1',\r\n        component: Error1Component,\r\n        data: {\r\n            title: 'Error 1'\r\n        }\r\n    },\r\n    {\r\n        path: 'error-2',\r\n        component: Error2Component,\r\n        data: {\r\n            title: 'Error 2'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\n\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\r\n\r\nimport { Login1Component } from './login-1/login-1.component';\r\nimport { Login2Component } from './login-2/login-2.component';\r\nimport { Login3Component } from './login-3/login-3.component';\r\nimport { SignUp1Component } from './sign-up-1/sign-up-1.component';\r\nimport { SignUp2Component } from './sign-up-2/sign-up-2.component';\r\nimport { SignUp3Component } from './sign-up-3/sign-up-3.component';\r\nimport { Error1Component } from './error-1/error-1.component';\r\nimport { Error2Component } from './error-2/error-2.component';\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst antdModule= [\r\n    NzFormModule,\r\n    NzInputModule,\r\n    NzButtonModule,\r\n    NzCardModule,\r\n    NzCheckboxModule\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        ReactiveFormsModule,\r\n        AuthenticationRoutingModule,\r\n        ...antdModule\r\n    ],\r\n    declarations: [\r\n        Login1Component,\r\n        Login2Component,\r\n        Login3Component,\r\n        SignUp1Component,\r\n        SignUp2Component,\r\n        SignUp3Component,\r\n        Error1Component,\r\n        Error2Component,\r\n        LoginComponent\r\n    ]\r\n})\r\n\r\nexport class AuthenticationModule {}","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    templateUrl: './error-1.component.html'\r\n})\r\n\r\nexport class Error1Component {\r\n   \r\n}    ","<div class=\"container-fluid p-v-20 h-100\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n        <div class=\"d-none d-md-block p-h-40\">\r\n            <img class=\"img-fluid\" alt=\"\" src=\"assets/images/logo/logo.png\">\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"p-v-30\">\r\n                        <h1 class=\"font-weight-semibold display-1 text-primary lh-1-2\">404</h1>\r\n                        <h2 class=\"font-weight-light font-size-30\">Whoops! Looks like you got lost</h2>\r\n                        <p class=\"lead m-b-30\">We couldnt find what you were looking for.</p>\r\n                        <a [routerLink]=\"['/dashboard/default']\" nz-button nzType=\"primary\">Go Back</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 m-l-auto\">\r\n                    <img class=\"img-fluid\" src=\"assets/images/others/error-1.png\" alt=\"\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-none d-md-flex p-h-40 justify-content-between\">\r\n            <span class=\"\">© 2019 ThemeNate</span>\r\n            <ul class=\"list-inline\">\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                </li>\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    templateUrl: './error-2.component.html'\r\n})\r\n\r\nexport class Error2Component {\r\n   \r\n}    ","<div class=\"container-fluid p-v-20 h-100\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n        <div class=\"p-h-40\">\r\n            <img class=\"img-fluid\" alt=\"\" src=\"assets/images/logo/logo.png\">\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-md-8 m-h-auto\">\r\n                    <div class=\"text-center m-b-50\">\r\n                        <img class=\"img-fluid w-90\" src=\"assets/images/others/error-2.png\" alt=\"\">\r\n                        <h2 class=\"font-weight-light font-size-30 m-t-60 m-b-20\">Sorry, we're down for maintenance...</h2>\r\n                        <p class=\"w-70 lh-1-8 m-h-auto font-size-17\">Unfortunately the site is down for abit of maintenance right now. But we're doing our best to get things back.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex p-h-40 justify-content-between\">\r\n            <span class=\"\">© 2019 ThemeNate</span>\r\n            <ul class=\"list-inline\">\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                </li>\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './login-1.component.html'\r\n})\r\n\r\nexport class Login1Component {\r\n    loginForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.loginForm.controls) {\r\n            this.loginForm.controls[ i ].markAsDirty();\r\n            this.loginForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loginForm = this.fb.group({\r\n            userName: [ null, [ Validators.required ] ],\r\n            password: [ null, [ Validators.required ] ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid p-0 h-100\">\r\n    <div class=\"row no-gutters h-100\">\r\n        <div class=\"col-lg-4 d-none d-lg-flex\" style=\"background-image:url('assets/images/others/login-1.jpg')\">\r\n            <div class=\"d-flex h-100 p-h-40 p-v-15 flex-column justify-content-between\">\r\n                <div>\r\n                    <img src=\"assets/images/logo/logo-white.png\" alt=\"\">\r\n                </div>\r\n                <div>\r\n                    <h1 class=\"text-white m-b-20 font-weight-normal\">Exploring Enlink</h1>\r\n                    <p class=\"text-white font-size-16 lh-2 w-80 opacity-08\">Climb leg rub face on everything give attitude nap all day for under the bed. Chase mice attack feet but rub face on everything hopped up.</p>\r\n                </div>\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <span class=\"text-white\">© 2019 ThemeNate</span>\r\n                    <ul class=\"list-inline\">\r\n                        <li class=\"list-inline-item\">\r\n                            <a class=\"text-white text-link\" href=\"\">Legal</a>\r\n                        </li>\r\n                        <li class=\"list-inline-item\">\r\n                            <a class=\"text-white text-link\" href=\"\">Privacy</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-8 bg-white\">\r\n            <div class=\"container h-100\">\r\n                <div class=\"row no-gutters h-100 align-items-center\">\r\n                    <div class=\"col-md-8 col-lg-7 col-xl-6 mx-auto\">\r\n                        <h2>Sign In</h2>\r\n                        <p class=\"m-b-30\">Enter your credential to get access</p>\r\n                        <form nz-form [formGroup]=\"loginForm\" nzLayout=\"vertical\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"userName\">Username</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                                    <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                                        <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\">\r\n                                    </nz-input-group>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"password\">Password</nz-form-label>\r\n                                <a class=\"font-size-13 p-t-10 text-muted\" style=\"position:absolute; right: 0\" [routerLink]=\"['/authentication/reset-password-1']\">Forget Password?</a>\r\n                                <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                                    <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                                        <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\">\r\n                                    </nz-input-group>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-control>\r\n                                    <div class=\"d-flex align-items-center justify-content-between\">\r\n                                        <span class=\"font-size-13 text-muted\">Don't have an account? <a class=\"small\" [routerLink]=\"['/authentication/sign-up-1']\"> Signup</a></span>\r\n                                        <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign In</button>\r\n                                    </div>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                        </form>\r\n                        <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n                        <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './login-2.component.html'\r\n})\r\n\r\nexport class Login2Component {\r\n    loginForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.loginForm.controls) {\r\n            this.loginForm.controls[ i ].markAsDirty();\r\n            this.loginForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loginForm = this.fb.group({\r\n            userName: [ null, [ Validators.required ] ],\r\n            password: [ null, [ Validators.required ] ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid h-100\">\r\n    <div class=\"d-flex h-100 p-v-15 flex-column justify-content-between\">\r\n        <div class=\"d-none d-md-flex p-h-40\">\r\n            <img src=\"assets/images/logo/logo.png\" alt=\"\">\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-md-5\">\r\n                    <nz-card>\r\n                        <h2 class=\"m-t-20\">Sign In</h2>\r\n                        <p class=\"m-b-30\">Enter your credential to get access</p>\r\n                        <form nz-form [formGroup]=\"loginForm\" nzLayout=\"vertical\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"userName\">Username</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                                    <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                                        <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\">\r\n                                    </nz-input-group>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item class=\"relative\">\r\n                                <nz-form-label nzRequired nzFor=\"password\">Password</nz-form-label>\r\n                                <a class=\"float-right font-size-13 text-muted\" style=\"position:absolute; right: 0\" [routerLink]=\"['/authentication/reset-password-1']\">Forget Password?</a>\r\n                                <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                                    <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                                        <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\">\r\n                                    </nz-input-group>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-control>\r\n                                    <div class=\"d-flex align-items-center justify-content-between\">\r\n                                        <span class=\"font-size-13 text-muted\">Don't have an account? <a class=\"small\" [routerLink]=\"['/authentication/sign-up-1']\"> Signup</a></span>\r\n                                        <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign In</button>\r\n                                    </div>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                        </form>\r\n                        <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n                        <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n                    </nz-card>\r\n                </div>\r\n                <div class=\"offset-md-1 col-md-6 d-none d-md-block\">\r\n                    <img class=\"img-fluid\" src=\"assets/images/others/login-2.png\" alt=\"\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-none d-md-flex  p-h-40 justify-content-between\">\r\n            <span class=\"\">© 2019 ThemeNate</span>\r\n            <ul class=\"list-inline\">\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                </li>\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './login-3.component.html'\r\n})\r\n\r\nexport class Login3Component {\r\n    loginForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.loginForm.controls) {\r\n            this.loginForm.controls[ i ].markAsDirty();\r\n            this.loginForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loginForm = this.fb.group({\r\n            userName: [ null, [ Validators.required ] ],\r\n            password: [ null, [ Validators.required ] ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid p-h-0 p-v-20 h-100 bg\" style=\"background-image: url('assets/images/others/login-3.png')\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n        <div class=\"d-none d-md-block\"></div>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-md-7 col-lg-5 m-h-auto\">\r\n                    <nz-card class=\"m-b-100 shadow-lg\">\r\n                        <div class=\"d-flex align-items-center justify-content-between m-b-30\">\r\n                            <img class=\"img-fluid\" alt=\"\" src=\"assets/images/logo/logo.png\">\r\n                            <h2 class=\"m-b-0\">Administrator</h2>\r\n                        </div>\r\n                        <form nz-form [formGroup]=\"loginForm\" nzLayout=\"vertical\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n                            \r\n                            <nz-form-item>\r\n                                <nz-form-control>\r\n                                    <div class=\"d-flex align-items-center justify-content-between\">\r\n                                        <span class=\"font-size-13 text-muted\">Don't have an account? <a class=\"small\" [routerLink]=\"['/authentication/sign-up-1']\"> Contact to admin</a></span>\r\n                                        <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign In</button>\r\n                                    </div>\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                        </form>\r\n                        <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n                        <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n                    </nz-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-none d-md-flex p-h-40 justify-content-between\">\r\n            <span class=\"\">© 2019 ThemeNate</span>\r\n            <ul class=\"list-inline\">\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                </li>\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from 'src/app/shared/services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.spinner.show();\n    this.authService.login();\n  }\n}\n","<div class=\"container-fluid p-h-0 p-v-20 h-100 bg\" style=\"background-image: url('assets/images/others/login-3.png')\">\n    <div class=\"d-flex flex-column justify-content-between h-100\">\n        <div class=\"d-none d-md-block\"></div>\n        <div class=\"container\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-7 col-lg-5 m-h-auto\">\n                    <nz-card class=\"m-b-100 shadow-lg\">\n                        <div class=\"d-flex align-items-center justify-content-between m-b-30\">\n                            <img class=\"img-fluid\" alt=\"\" src=\"assets/images/logo/logo.png\">\n                            <h2 class=\"m-b-0\">Administrator</h2>\n                        </div>\n                        <form nz-form>\n                            <nz-form-item>\n                                <nz-form-control>\n                                    <div class=\"d-flex align-items-center justify-content-between\">\n                                        <span class=\"font-size-13 text-muted\">Don't have an account? <a class=\"small\" [routerLink]=\"['/authentication/sign-up-1']\"> Contact to admin</a></span>\n                                        <button (click)=\"login()\" nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign In</button>\n                                    </div>\n                                </nz-form-control>\n                            </nz-form-item>\n                        </form>\n                        <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\n                        <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\n                    </nz-card>\n                </div>\n            </div>\n        </div>\n        <div class=\"d-none d-md-flex p-h-40 justify-content-between\">\n            <span class=\"\">© 2019 ThemeNate</span>\n            <ul class=\"list-inline\">\n                <li class=\"list-inline-item\">\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\n                </li>\n                <li class=\"list-inline-item\">\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormControl, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './sign-up-1.component.html'\r\n})\r\n\r\nexport class SignUp1Component {\r\n\r\n    signUpForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.signUpForm.controls) {\r\n            this.signUpForm.controls[ i ].markAsDirty();\r\n            this.signUpForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    updateConfirmValidator(): void {\r\n        Promise.resolve().then(() => this.signUpForm.controls.checkPassword.updateValueAndValidity());\r\n    }\r\n\r\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.signUpForm.controls.password.value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.signUpForm = this.fb.group({\r\n            userName         : [ null, [ Validators.required ] ],\r\n            email            : [ null, [ Validators.required ] ],\r\n            password         : [ null, [ Validators.required ] ],\r\n            checkPassword    : [ null, [ Validators.required, this.confirmationValidator ] ],\r\n            agree            : [ false ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid p-0 h-100\">\r\n        <div class=\"row no-gutters h-100\">\r\n            <div class=\"col-lg-4 d-none d-lg-flex\" style=\"background-image:url('assets/images/others/sign-up-1.jpg')\">\r\n                <div class=\"d-flex h-100 p-h-40 p-v-15 flex-column justify-content-between\">\r\n                    <div>\r\n                        <img src=\"assets/images/logo/logo-white.png\" alt=\"\">\r\n                    </div>\r\n                    <div>\r\n                        <h1 class=\"text-white m-b-20 font-weight-normal\">Exploring Enlink</h1>\r\n                        <p class=\"text-white font-size-16 lh-2 w-80 opacity-08\">Climb leg rub face on everything give attitude nap all day for under the bed. Chase mice attack feet but rub face on everything hopped up.</p>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span class=\"text-white\">© 2019 ThemeNate</span>\r\n                        <ul class=\"list-inline\">\r\n                            <li class=\"list-inline-item\">\r\n                                <a class=\"text-white text-link\" href=\"\">Legal</a>\r\n                            </li>\r\n                            <li class=\"list-inline-item\">\r\n                                <a class=\"text-white text-link\" href=\"\">Privacy</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-8 bg-white\">\r\n                <div class=\"container h-100\">\r\n                    <div class=\"row no-gutters h-100 align-items-center\">\r\n                        <div class=\"col-md-8 col-lg-7 col-xl-6 mx-auto\">\r\n                            <h2>Sign Up</h2>\r\n                            <p class=\"m-b-30\">Create your account to get access</p>\r\n                            <form nz-form [formGroup]=\"signUpForm\" class=\"login-form\" nzLayout=\"vertical\" (ngSubmit)=\"submitForm()\">\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"userName\">Username</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                                        <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" id=\"userName\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"email\">Email</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"The input is not valid E-mail!\">\r\n                                        <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"Username\" id=\"email\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"password\">Password</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                                        <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" id=\"password\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzFor=\"checkPassword\" nzRequired>Confirm Password</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please confirm your password!\">\r\n                                        <input nz-input type=\"password\" formControlName=\"checkPassword\"  placeholder=\"Confirm Password\" id=\"checkPassword\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <div class=\"d-flex align-items-center justify-content-between\">\r\n                                    <nz-form-item>\r\n                                        <nz-form-control>\r\n                                            <label nz-checkbox formControlName=\"agree\">\r\n                                                <span>I have read the <a>agreement</a></span>\r\n                                            </label>\r\n                                        </nz-form-control>\r\n                                    </nz-form-item>\r\n                                    <nz-form-item>\r\n                                        <nz-form-control>\r\n                                            <div >\r\n                                                <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign Up</button>\r\n                                            </div>\r\n                                        </nz-form-control>\r\n                                    </nz-form-item>   \r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormControl, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './sign-up-2.component.html'\r\n})\r\n\r\nexport class SignUp2Component {\r\n\r\n    signUpForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.signUpForm.controls) {\r\n            this.signUpForm.controls[ i ].markAsDirty();\r\n            this.signUpForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    updateConfirmValidator(): void {\r\n        Promise.resolve().then(() => this.signUpForm.controls.checkPassword.updateValueAndValidity());\r\n    }\r\n\r\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.signUpForm.controls.password.value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.signUpForm = this.fb.group({\r\n            userName         : [ null, [ Validators.required ] ],\r\n            email            : [ null, [ Validators.required ] ],\r\n            password         : [ null, [ Validators.required ] ],\r\n            checkPassword    : [ null, [ Validators.required, this.confirmationValidator ] ],\r\n            agree            : [ false ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid h-100\">\r\n        <div class=\"d-flex h-100 p-v-15 flex-column justify-content-between\">\r\n            <div class=\"d-none d-md-flex p-h-40\">\r\n                <img src=\"assets/images/logo/logo.png\" alt=\"\">\r\n            </div>\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center\">\r\n                    <div class=\"col-md-6 d-none d-md-block\">\r\n                        <img class=\"img-fluid\" src=\"assets/images/others/sign-up-2.png\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"m-l-auto col-md-5\">\r\n                        <nz-card>\r\n                            <h2 class=\"m-t-20\">Sign Up</h2>\r\n                            <p class=\"m-b-30\">Create your account to get access</p>\r\n                            <form nz-form [formGroup]=\"signUpForm\" class=\"login-form\" nzLayout=\"vertical\" (ngSubmit)=\"submitForm()\">\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"userName\">Username</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                                        <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" id=\"userName\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"email\">Email</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"The input is not valid E-mail!\">\r\n                                        <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"Username\" id=\"email\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzRequired nzFor=\"password\">Password</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                                        <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" id=\"password\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-label nzFor=\"checkPassword\" nzRequired>Confirm Password</nz-form-label>\r\n                                    <nz-form-control nzErrorTip=\"Please confirm your password!\">\r\n                                        <input nz-input type=\"password\" formControlName=\"checkPassword\"  placeholder=\"Confirm Password\" id=\"checkPassword\">\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <div class=\"d-flex align-items-center justify-content-between\">\r\n                                    <nz-form-item>\r\n                                        <nz-form-control>\r\n                                            <label nz-checkbox formControlName=\"agree\">\r\n                                                <span>I have read the <a>agreement</a></span>\r\n                                            </label>\r\n                                        </nz-form-control>\r\n                                    </nz-form-item>\r\n                                    <nz-form-item>\r\n                                        <nz-form-control>\r\n                                            <div >\r\n                                                <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign Up</button>\r\n                                            </div>\r\n                                        </nz-form-control>\r\n                                    </nz-form-item>   \r\n                                </div>\r\n                            </form>\r\n                        </nz-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-none d-md-flex  p-h-40 justify-content-between\">\r\n                <span class=\"\">© 2019 ThemeNate</span>\r\n                <ul class=\"list-inline\">\r\n                    <li class=\"list-inline-item\">\r\n                        <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                        <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    ","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormControl, FormGroup,  Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: './sign-up-3.component.html'\r\n})\r\n\r\nexport class SignUp3Component {\r\n\r\n    signUpForm: FormGroup;\r\n\r\n    submitForm(): void {\r\n        for (const i in this.signUpForm.controls) {\r\n            this.signUpForm.controls[ i ].markAsDirty();\r\n            this.signUpForm.controls[ i ].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    updateConfirmValidator(): void {\r\n        Promise.resolve().then(() => this.signUpForm.controls.checkPassword.updateValueAndValidity());\r\n    }\r\n\r\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.signUpForm.controls.password.value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    }\r\n\r\n    constructor(private fb: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.signUpForm = this.fb.group({\r\n            userName         : [ null, [ Validators.required ] ],\r\n            email            : [ null, [ Validators.required ] ],\r\n            password         : [ null, [ Validators.required ] ],\r\n            checkPassword    : [ null, [ Validators.required, this.confirmationValidator ] ],\r\n            agree            : [ false ]\r\n        });\r\n    }\r\n}    ","<div class=\"container-fluid p-h-0 p-v-20 h-100 bg\" style=\"background-image: url('assets/images/others/login-3.png')\">\r\n    <div class=\"d-flex flex-column justify-content-between h-100\">\r\n        <div class=\"d-none d-md-block\"></div>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-md-7 col-lg-5 m-h-auto\">\r\n                    <nz-card class=\"m-b-60 shadow-lg\">\r\n                        <div class=\"d-flex align-items-center justify-content-between m-b-30\">\r\n                            <img class=\"img-fluid\" alt=\"\" src=\"assets/images/logo/logo.png\">\r\n                            <h2 class=\"m-b-0\">Sign Up</h2>\r\n                        </div>\r\n                        <form nz-form [formGroup]=\"signUpForm\" class=\"login-form\" nzLayout=\"vertical\" (ngSubmit)=\"submitForm()\">\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"userName\">Username</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                                    <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" id=\"userName\">\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"email\">Email</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"The input is not valid E-mail!\">\r\n                                    <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"Username\" id=\"email\">\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-label nzRequired nzFor=\"password\">Password</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                                    <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" id=\"password\">\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <nz-form-item>\r\n                                <nz-form-label nzFor=\"checkPassword\" nzRequired>Confirm Password</nz-form-label>\r\n                                <nz-form-control nzErrorTip=\"Please confirm your password!\">\r\n                                    <input nz-input type=\"password\" formControlName=\"checkPassword\"  placeholder=\"Confirm Password\" id=\"checkPassword\">\r\n                                </nz-form-control>\r\n                            </nz-form-item>\r\n                            <div class=\"d-flex align-items-center justify-content-between\">\r\n                                <nz-form-item>\r\n                                    <nz-form-control>\r\n                                        <label nz-checkbox formControlName=\"agree\">\r\n                                            <span>I have read the <a>agreement</a></span>\r\n                                        </label>\r\n                                    </nz-form-control>\r\n                                </nz-form-item>\r\n                                <nz-form-item>\r\n                                    <nz-form-control>\r\n                                        <div >\r\n                                            <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Sign Up</button>\r\n                                        </div>\r\n                                    </nz-form-control>\r\n                                </nz-form-item>   \r\n                            </div>\r\n                        </form>\r\n                    </nz-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-none d-md-flex p-h-40 justify-content-between\">\r\n            <span class=\"\">© 2019 ThemeNate</span>\r\n            <ul class=\"list-inline\">\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Legal</a>\r\n                </li>\r\n                <li class=\"list-inline-item\">\r\n                    <a class=\"text-dark text-link\" href=\"\">Privacy</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import * as i0 from '@angular/core';\nimport { Injectable, Pipe, Component, ChangeDetectionStrategy, Input, ViewChild, HostListener, NgModule } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\n\nconst LOADERS = {\n    'ball-8bits': 16,\n    'ball-atom': 4,\n    'ball-beat': 3,\n    'ball-circus': 5,\n    'ball-climbing-dot': 4,\n    'ball-clip-rotate': 1,\n    'ball-clip-rotate-multiple': 2,\n    'ball-clip-rotate-pulse': 2,\n    'ball-elastic-dots': 5,\n    'ball-fall': 3,\n    'ball-fussion': 4,\n    'ball-grid-beat': 9,\n    'ball-grid-pulse': 9,\n    'ball-newton-cradle': 4,\n    'ball-pulse': 3,\n    'ball-pulse-rise': 5,\n    'ball-pulse-sync': 3,\n    'ball-rotate': 1,\n    'ball-running-dots': 5,\n    'ball-scale': 1,\n    'ball-scale-multiple': 3,\n    'ball-scale-pulse': 2,\n    'ball-scale-ripple': 1,\n    'ball-scale-ripple-multiple': 3,\n    'ball-spin': 8,\n    'ball-spin-clockwise': 8,\n    'ball-spin-clockwise-fade': 8,\n    'ball-spin-clockwise-fade-rotating': 8,\n    'ball-spin-fade': 8,\n    'ball-spin-fade-rotating': 8,\n    'ball-spin-rotate': 2,\n    'ball-square-clockwise-spin': 8,\n    'ball-square-spin': 8,\n    'ball-triangle-path': 3,\n    'ball-zig-zag': 2,\n    'ball-zig-zag-deflect': 2,\n    'cog': 1,\n    'cube-transition': 2,\n    'fire': 3,\n    'line-scale': 5,\n    'line-scale-party': 5,\n    'line-scale-pulse-out': 5,\n    'line-scale-pulse-out-rapid': 5,\n    'line-spin-clockwise-fade': 8,\n    'line-spin-clockwise-fade-rotating': 8,\n    'line-spin-fade': 8,\n    'line-spin-fade-rotating': 8,\n    'pacman': 6,\n    'square-jelly-box': 2,\n    'square-loader': 1,\n    'square-spin': 1,\n    'timer': 1,\n    'triangle-skew-spin': 1\n};\nconst DEFAULTS = {\n    BD_COLOR: 'rgba(51,51,51,0.8)',\n    SPINNER_COLOR: '#fff',\n    Z_INDEX: 99999,\n};\nconst PRIMARY_SPINNER = 'primary';\nclass NgxSpinner {\n    constructor(init) {\n        Object.assign(this, init);\n    }\n    static create(init) {\n        if ((init === null || init === void 0 ? void 0 : init.type) == null || init.type.length === 0) {\n            console.warn(`[ngx-spinner]: Property \"type\" is missed. Please, provide animation type to <ngx-spinner> component\n        and ensure css is added to angular.json file`);\n        }\n        return new NgxSpinner(init);\n    }\n}\n\nclass NgxSpinnerService {\n    /**\n     * Creates an instance of NgxSpinnerService.\n     * @memberof NgxSpinnerService\n     */\n    constructor() {\n        /**\n         * Spinner observable\n         *\n         * @memberof NgxSpinnerService\n         */\n        // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n        this.spinnerObservable = new BehaviorSubject(null);\n    }\n    /**\n    * Get subscription of desired spinner\n    * @memberof NgxSpinnerService\n    **/\n    getSpinner(name) {\n        return this.spinnerObservable.asObservable().pipe(filter((x) => x && x.name === name));\n    }\n    /**\n     * To show spinner\n     *\n     * @memberof NgxSpinnerService\n     */\n    show(name = PRIMARY_SPINNER, spinner) {\n        return new Promise((resolve, _reject) => {\n            setTimeout(() => {\n                if (spinner && Object.keys(spinner).length) {\n                    spinner['name'] = name;\n                    this.spinnerObservable.next(new NgxSpinner(Object.assign(Object.assign({}, spinner), { show: true })));\n                    resolve(true);\n                }\n                else {\n                    this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n                    resolve(true);\n                }\n            }, 10);\n        });\n    }\n    /**\n    * To hide spinner\n    *\n    * @memberof NgxSpinnerService\n    */\n    hide(name = PRIMARY_SPINNER, debounce = 10) {\n        return new Promise((resolve, _reject) => {\n            setTimeout(() => {\n                this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n                resolve(true);\n            }, debounce);\n        });\n    }\n}\nNgxSpinnerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxSpinnerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass SafeHtmlPipe {\n    constructor(_sanitizer) {\n        this._sanitizer = _sanitizer;\n    }\n    transform(v) {\n        if (v) {\n            return this._sanitizer.bypassSecurityTrustHtml(v);\n        }\n    }\n}\nSafeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, name: \"safeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'safeHtml'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass NgxSpinnerComponent {\n    /**\n     * Creates an instance of NgxSpinnerComponent.\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    constructor(spinnerService, changeDetector, elementRef) {\n        this.spinnerService = spinnerService;\n        this.changeDetector = changeDetector;\n        this.elementRef = elementRef;\n        /**\n         * To enable/disable animation\n         *\n         * @type {boolean}\n         * @memberof NgxSpinnerComponent\n         */\n        this.disableAnimation = false;\n        /**\n         * Spinner Object\n         *\n         * @memberof NgxSpinnerComponent\n         */\n        this.spinner = new NgxSpinner();\n        /**\n         * Unsubscribe from spinner's observable\n         *\n         * @memberof NgxSpinnerComponent\n        **/\n        this.ngUnsubscribe = new Subject();\n        /**\n         * To set default ngx-spinner options\n         *\n         * @memberof NgxSpinnerComponent\n         */\n        this.setDefaultOptions = () => {\n            this.spinner = NgxSpinner.create({\n                name: this.name,\n                bdColor: this.bdColor,\n                size: this.size,\n                color: this.color,\n                type: this.type,\n                fullScreen: this.fullScreen,\n                divArray: this.divArray,\n                divCount: this.divCount,\n                show: this.show,\n                zIndex: this.zIndex,\n                template: this.template,\n                showSpinner: this.showSpinner\n            });\n        };\n        this.bdColor = DEFAULTS.BD_COLOR;\n        this.zIndex = DEFAULTS.Z_INDEX;\n        this.color = DEFAULTS.SPINNER_COLOR;\n        this.size = 'large';\n        this.fullScreen = true;\n        this.name = PRIMARY_SPINNER;\n        this.template = null;\n        this.showSpinner = false;\n        this.divArray = [];\n        this.divCount = 0;\n        this.show = false;\n    }\n    handleKeyboardEvent(event) {\n        if (this.spinnerDOM && this.spinnerDOM.nativeElement) {\n            if (this.fullScreen || (!this.fullScreen && this.isSpinnerZone(event.target))) {\n                event.returnValue = false;\n                event.preventDefault();\n            }\n        }\n    }\n    initObservable() {\n        this.spinnerService.getSpinner(this.name)\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((spinner) => {\n            this.setDefaultOptions();\n            Object.assign(this.spinner, spinner);\n            if (spinner.show) {\n                this.onInputChange();\n            }\n            this.changeDetector.detectChanges();\n        });\n    }\n    /**\n     * Initialization method\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnInit() {\n        this.setDefaultOptions();\n        this.initObservable();\n    }\n    /**\n     * To check event triggers inside the Spinner Zone\n     *\n     * @param {*} element\n     * @returns {boolean}\n     * @memberof NgxSpinnerComponent\n     */\n    isSpinnerZone(element) {\n        if (element === this.elementRef.nativeElement.parentElement) {\n            return true;\n        }\n        return element.parentNode && this.isSpinnerZone(element.parentNode);\n    }\n    /**\n     * On changes event for input variables\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnChanges(changes) {\n        for (const propName in changes) {\n            if (propName) {\n                const changedProp = changes[propName];\n                if (changedProp.isFirstChange()) {\n                    return;\n                }\n                else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\n                    if (changedProp.currentValue !== '') {\n                        this.spinner[propName] = changedProp.currentValue;\n                        if (propName === 'showSpinner') {\n                            if (changedProp.currentValue) {\n                                this.spinnerService.show(this.spinner.name, this.spinner);\n                            }\n                            else {\n                                this.spinnerService.hide(this.spinner.name);\n                            }\n                        }\n                        if (propName === 'name') {\n                            this.initObservable();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * To get class for spinner\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    getClass(type, size) {\n        this.spinner.divCount = LOADERS[type];\n        this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((_, i) => i);\n        let sizeClass = '';\n        switch (size.toLowerCase()) {\n            case 'small':\n                sizeClass = 'la-sm';\n                break;\n            case 'medium':\n                sizeClass = 'la-2x';\n                break;\n            case 'large':\n                sizeClass = 'la-3x';\n                break;\n            default:\n                break;\n        }\n        return 'la-' + type + ' ' + sizeClass;\n    }\n    /**\n     * Check if input variables have changed\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    onInputChange() {\n        this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n    }\n    /**\n     * Component destroy event\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\nNgxSpinnerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerComponent, deps: [{ token: NgxSpinnerService }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxSpinnerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgxSpinnerComponent, selector: \"ngx-spinner\", inputs: { bdColor: \"bdColor\", size: \"size\", color: \"color\", type: \"type\", fullScreen: \"fullScreen\", name: \"name\", zIndex: \"zIndex\", template: \"template\", showSpinner: \"showSpinner\", disableAnimation: \"disableAnimation\" }, host: { listeners: { \"document:keydown\": \"handleKeyboardEvent($event)\" } }, viewQueries: [{ propertyName: \"spinnerDOM\", first: true, predicate: [\"overlay\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div [@.disabled]=\\\"disableAnimation\\\" [@fadeIn]=\\\"'in'\\\" *ngIf=\\\"spinner.show\\\" class=\\\"ngx-spinner-overlay\\\"\\n  [style.background-color]=\\\"spinner.bdColor\\\" [style.z-index]=\\\"spinner.zIndex\\\"\\n  [style.position]=\\\"spinner.fullScreen ? 'fixed' : 'absolute'\\\" #overlay>\\n  <div *ngIf=\\\"!template\\\" [class]=\\\"spinner.class\\\" [style.color]=\\\"spinner.color\\\">\\n    <div *ngFor=\\\"let index of spinner.divArray\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"template\\\" [innerHTML]=\\\"template | safeHtml\\\"></div>\\n  <div class=\\\"loading-text\\\" [style.z-index]=\\\"spinner.zIndex\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\", styles: [\".ngx-spinner-overlay{position:fixed;top:0;left:0;width:100%;height:100%}.ngx-spinner-overlay>div:not(.loading-text){top:50%;left:50%;margin:0;position:absolute;transform:translate(-50%,-50%)}.loading-text{position:absolute;top:60%;left:50%;transform:translate(-50%,-60%)}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"safeHtml\": SafeHtmlPipe }, animations: [\n        trigger('fadeIn', [\n            state('in', style({ opacity: 1 })),\n            transition(':enter', [\n                style({ opacity: 0 }),\n                animate(300)\n            ]),\n            transition(':leave', animate(200, style({ opacity: 0 })))\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-spinner', changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('fadeIn', [\n                            state('in', style({ opacity: 1 })),\n                            transition(':enter', [\n                                style({ opacity: 0 }),\n                                animate(300)\n                            ]),\n                            transition(':leave', animate(200, style({ opacity: 0 })))\n                        ])\n                    ], template: \"<div [@.disabled]=\\\"disableAnimation\\\" [@fadeIn]=\\\"'in'\\\" *ngIf=\\\"spinner.show\\\" class=\\\"ngx-spinner-overlay\\\"\\n  [style.background-color]=\\\"spinner.bdColor\\\" [style.z-index]=\\\"spinner.zIndex\\\"\\n  [style.position]=\\\"spinner.fullScreen ? 'fixed' : 'absolute'\\\" #overlay>\\n  <div *ngIf=\\\"!template\\\" [class]=\\\"spinner.class\\\" [style.color]=\\\"spinner.color\\\">\\n    <div *ngFor=\\\"let index of spinner.divArray\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"template\\\" [innerHTML]=\\\"template | safeHtml\\\"></div>\\n  <div class=\\\"loading-text\\\" [style.z-index]=\\\"spinner.zIndex\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\", styles: [\".ngx-spinner-overlay{position:fixed;top:0;left:0;width:100%;height:100%}.ngx-spinner-overlay>div:not(.loading-text){top:50%;left:50%;margin:0;position:absolute;transform:translate(-50%,-50%)}.loading-text{position:absolute;top:60%;left:50%;transform:translate(-50%,-60%)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgxSpinnerService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { bdColor: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], fullScreen: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], showSpinner: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], spinnerDOM: [{\n                type: ViewChild,\n                args: ['overlay']\n            }], handleKeyboardEvent: [{\n                type: HostListener,\n                args: ['document:keydown', ['$event']]\n            }] } });\n\nclass NgxSpinnerModule {\n}\nNgxSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerModule, declarations: [NgxSpinnerComponent, SafeHtmlPipe], imports: [CommonModule], exports: [NgxSpinnerComponent] });\nNgxSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [NgxSpinnerComponent, SafeHtmlPipe],\n                    exports: [NgxSpinnerComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-spinner\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULTS, LOADERS, NgxSpinner, NgxSpinnerComponent, NgxSpinnerModule, NgxSpinnerService, PRIMARY_SPINNER };\n"],"names":["i0","Injectable","Pipe","Component","ChangeDetectionStrategy","Input","ViewChild","HostListener","NgModule","BehaviorSubject","Subject","filter","takeUntil","trigger","state","style","transition","animate","i2","CommonModule","i1","LOADERS","DEFAULTS","BD_COLOR","SPINNER_COLOR","Z_INDEX","PRIMARY_SPINNER","NgxSpinner","constructor","init","Object","assign","create","type","length","console","warn","NgxSpinnerService","spinnerObservable","getSpinner","name","asObservable","pipe","x","show","spinner","Promise","resolve","_reject","setTimeout","keys","next","hide","debounce","ɵfac","ɵprov","args","providedIn","SafeHtmlPipe","_sanitizer","transform","v","bypassSecurityTrustHtml","DomSanitizer","ɵpipe","NgxSpinnerComponent","spinnerService","changeDetector","elementRef","disableAnimation","ngUnsubscribe","setDefaultOptions","bdColor","size","color","fullScreen","divArray","divCount","zIndex","template","showSpinner","handleKeyboardEvent","event","spinnerDOM","nativeElement","isSpinnerZone","target","returnValue","preventDefault","initObservable","subscribe","onInputChange","detectChanges","ngOnInit","element","parentElement","parentNode","ngOnChanges","changes","propName","changedProp","isFirstChange","currentValue","previousValue","getClass","Array","fill","map","_","i","sizeClass","toLowerCase","class","ngOnDestroy","complete","ChangeDetectorRef","ElementRef","ɵcmp","NgIf","NgForOf","opacity","selector","changeDetection","OnPush","animations","styles","NgxSpinnerModule","ɵmod","ɵinj","imports","declarations","exports"],"sourceRoot":"webpack:///"}